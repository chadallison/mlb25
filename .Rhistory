summarise(pct = round(mean(win_flg) * 100, 2),
.groups = "drop") |>
pivot_wider(id_cols = team, names_from = "ab500", values_from = "pct") |>
inner_join(teams_info, by = "team") |>
# this might not be the best way to handle but handles an edge case where
# the cubs are yet to play a sub .500 opponent as of 04/26/2025
mutate(above = coalesce(above, below), below = coalesce(below, above)) |>
ggplot(aes(above, below)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_vline(xintercept = 50, linetype = "dashed", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dashed", alpha = 0.25) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 30) +
labs(x = "Win Percentage vs. Above .500 Teams",
y = "Win Percentage vs. Below .500 Teams",
title = glue("Win percentages vs. above/below .500 teams as of {today_nice}")) +
scale_x_continuous(breaks = seq(0, 100, by = 10), labels = scales::percent_format(scale = 1)) +
scale_y_continuous(breaks = seq(0, 100, by = 10), labels = scales::percent_format(scale = 1))
above_500_cnt_pct = above_below_500_res |>
filter(opp_win_pct >= 50) |>
group_by(team) |>
summarise(cnt = n(),
pct = round(mean(win_flg) * 100)) |>
inner_join(teams_info, by = "team")
above_500_cnt_pct |>
ggplot(aes(cnt, pct)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_vline(xintercept = mean(above_500_cnt_pct$cnt), linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 50, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 32) +
scale_x_continuous(breaks = seq(0, 100, by = 2)) +
scale_y_continuous(breaks = seq(0, 100, by = 10), labels = scales::percent_format(scale = 1)) +
labs(x = "Games played against .500 or better teams",
y = "Win percentage vs. .500 or better teams",
title = glue("Performance against .500 or better teams as of {today_nice}"))
team_npr_deltas = team_npr_by_game |>
transmute(date, team, npr = off_npr + def_npr) |>
arrange(team, date) |>
mutate(gn = row_number(),
limit = n() - 10,
.by = "team") |>
filter(gn <= limit) |>
group_by(team) |>
summarise(npr_prev_x = round(mean(npr), 3)) |>
inner_join((select(team_npr, team, ovr_npr)), by = "team") |>
mutate(delta = ovr_npr - npr_prev_x,
team_label = paste0(team, " (", round(delta, 2), ")"))
team_npr_deltas |>
inner_join(teams_info, by = "team") |>
ggplot(aes(x = reorder(team_label, ovr_npr), xend = reorder(team_label, ovr_npr),
y = npr_prev_x, yend = ovr_npr, col = team)) +
geom_segment(linewidth = 3.5, show.legend = F) +
geom_text(aes(y = ovr_npr, label = ifelse(delta >= 0, "→", "")),
size = 4, hjust = -0.2, vjust = 0.25, color = "black", alpha = 0.75) +
geom_text(aes(y = ovr_npr, label = ifelse(delta < 0, "←", "")),
size = 4, hjust = 1.2, vjust = 0.25, color = "black", alpha = 0.75) +
coord_flip() +
labs(x = NULL, y = "NPR Before/After Last Ten Games",
title = "Team NPR Trends in Past Ten Games",
subtitle = "Teams ordered by current NPR; number in parentheses represents change in last ten") +
scale_y_continuous(breaks = seq(-5, 5, by = 0.25)) +
scale_color_manual(values = team_hex)
team_runs_scored_by_game = end_games |>
select(date, team = home_team, runs = home_score) |>
rbind(end_games |>
select(date, team = away_team, runs = away_score)) |>
arrange(team, date)
team_runs_avg_sd = team_runs_scored_by_game |>
group_by(team) |>
summarise(avg = mean(runs, trim = 0.1),
sd = sd(runs)) |>
mutate(lb = avg - sd,
ub = avg + sd,
range = ub - lb)
team_runs_avg_sd |>
inner_join(teams_info, by = "team") |>
ggplot(aes(avg, sd)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = mean(team_runs_avg_sd$avg), linetype = "dashed", alpha = 0.25) +
geom_hline(yintercept = mean(team_runs_avg_sd$sd), linetype = "dashed", alpha = 0.25) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 32) +
scale_color_manual(values = team_hex) +
scale_x_continuous(breaks = seq(0, 10, by = 0.5)) +
scale_y_continuous(breaks = seq(0, 10, by = 0.5)) +
labs(x = "Avg. Runs Scored", y = "Runs Scored Volatility (SD)",
title = "Team runs scored vs. volatility",
subtitle = "Middle 80% of values -- upper & lower 10% (per team) excluded")
team_pythag_small = team_pythag |>
transmute(team, pythag = pythag / 100)
team_sa = team_scored_allowed |>
group_by(team) |>
summarise(scored = sum(scored),
allowed = sum(allowed))
temp = end_games |>
select(home_team, away_team, home_score, away_score) |>
inner_join(team_sa, by = c("home_team" = "team")) |>
rename(home_scored = scored, home_allowed = allowed) |>
inner_join(team_sa, by = c("away_team" = "team")) |>
rename(away_scored = scored, away_allowed = allowed)
team_opp_py = temp |>
group_by(team = home_team) |>
summarise(opp_scored = sum(away_scored),
opp_allowed = sum(away_allowed)) |>
bind_rows(temp |>
group_by(team = away_team) |>
summarise(opp_scored = sum(home_scored),
opp_allowed = sum(home_allowed))) |>
group_by(team) |>
summarise(opp_scored = sum(opp_scored),
opp_allowed = sum(opp_allowed)) |>
mutate(opp_py = opp_scored ^ 2 / (opp_scored ^ 2 + opp_allowed ^ 2)) |>
select(team, opp_py)
team_pythag_small |>
inner_join(team_opp_py, by = "team") |>
inner_join(teams_info, by = "team") |>
ggplot(aes(opp_py, pythag)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_vline(xintercept = 0.5, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 30) +
labs(x = "Avg. Opponent Pythagorean Win Percentage",
y = "Pythagorean Win Percentage",
title = glue("Performance by Strength of Schedule as of {today_nice}")) +
scale_x_continuous(breaks = seq(0, 1, by = 0.01), labels = scales::percent) +
scale_y_continuous(breaks = seq(0, 1, by = 0.05), labels = scales::percent)
one_run_records = end_games |>
filter(win_score - lose_score == 1) |>
count(team = win_team) |>
rename(wins = n) |>
inner_join(end_games |>
filter(win_score - lose_score == 1) |>
count(team = lose_team) |>
rename(losses = n), by = "team") |>
mutate(cnt = wins + losses,
pct = wins / cnt)
one_run_records |>
inner_join(teams_info, by = "team") |>
ggplot(aes(cnt, pct)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_vline(xintercept = mean(one_run_records$cnt), linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 30) +
scale_color_manual(values = team_hex) +
labs(x = "One-Run Games Played",
y = "Win Percentage in One-Run Games",
title = "Performance in One-Run Games") +
scale_x_continuous(breaks = seq(0, 50, by = 1)) +
scale_y_continuous(breaks = seq(0, 1, by = 0.05), labels = scales::percent)
team_scored_allowed |>
arrange(team, date) |>
mutate(game_num = row_number(),
gp = max(game_num),
.by = "team") |>
mutate(last7 = ifelse(game_num > gp - 7, 1, 0)) |>
filter(last7 == 1) |>
group_by(team) |>
summarise(scored = sum(scored),
allowed = sum(allowed)) |>
transmute(team,
py7 = scored ^ 2 / (scored ^ 2 + allowed ^ 2)) |>
inner_join(team_pythag_small, by = "team") |>
inner_join(teams_info, by = "team") |>
ggplot(aes(pythag, py7)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_vline(xintercept = 0.5, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 30) +
labs(x = "Overall Pythagorean Win Percentage",
y = "Pythagorean Win Percentage in Last 7 Games",
title = "Pythagorean Win Percentage: Last 7 Games vs. Full Season") +
scale_x_continuous(breaks = seq(0, 1, by = 0.05), labels = scales::percent) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1), labels = scales::percent)
team_scored_allowed |>
arrange(team, date) |>
mutate(game_num = row_number(),
games_played = n(),
.by = "team") |>
filter(game_num < games_played - 25) |>
group_by(team) |>
summarise(scored = sum(scored),
allowed = sum(allowed)) |>
transmute(team, py_prev = round(scored ^ 2 / (scored ^ 2 + allowed ^ 2), 3)) |>
inner_join(team_pythag_small, by = "team") |>
inner_join(teams_info, by = "team") |>
mutate(diff = pythag - py_prev) |>
arrange(desc(diff)) |>
ggplot(aes(py_prev, pythag)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 0.5, linetype = "dashed", alpha = 0.25) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.25) +
# geom_abline(linetype = "solid", col = "red") +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, max.overlaps = 30) +
labs(x = "Pythagorean Wins as of 25 Games Ago",
y = "Current Pythagorean Wins",
title = "Pythagorean Movement in Past 25 Games",
subtitle = "Teams above dashed line have improved in their last 25 relative to other teams") +
scale_x_continuous(breaks = seq(0, 1, by = 0.05), labels = scales::percent) +
scale_y_continuous(breaks = seq(0, 1, by = 0.05), labels = scales::percent)
kick = read_csv(path)
path = "C:\Users\chadr\Downloads\kickball_schedule_results.csv"
kick = read_csv(path)
path = "C:/Users/chadr/Downloads/kickball_schedule_results.csv"
kick = read_csv(path)
path = "C:/Users/chadr/Downloads/kickball_schedule_results.csv"
kick = read_csv(path, show_col_types = F)
kick
path = "C:/Users/chadr/Downloads/kickball_schedule_results.csv"
kick = read_csv(path, show_col_types = F)
kick
path = "C:/Users/chadr/Downloads/kickball_schedule_from_pdf.csv"
kick = read_csv(path, show_col_types = F)
kick
library(tidyverse)
library(tvthemes)
library(janitor)
library(glue)
library(zoo)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
list.files(path = "data")
for (file in list.files("data")) {
print(file)
data = read_csv("data/file", show_col_types = F)
print(nrow)
}
for (file in list.files("data")) {
print(file)
data = read_csv(glue("data/{file}"), show_col_types = F)
print(nrow)
}
list.files("data")
df = read_csv("data/allergies.csv", show_col_types = F)
df
all_files = list.files("data")
all_files
paste0(all_files)
paste0(all_files, collapse = ", ")
library(readr)
all_files <- list.files("data", pattern = "\\.csv$", full.names = TRUE)
for (file_path in all_files) {
file_name <- tools::file_path_sans_ext(basename(file_path))
assign(file_name, read_csv(file_path, show_col_types = FALSE))
}
allergies           = read_csv("data/allergies.csv", show_col_types = FALSE)
careplans           = read_csv("data/careplans.csv", show_col_types = FALSE)
claims              = read_csv("data/claims.csv", show_col_types = FALSE)
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = FALSE)
conditions          = read_csv("data/conditions.csv", show_col_types = FALSE)
devices             = read_csv("data/devices.csv", show_col_types = FALSE)
encounters          = read_csv("data/encounters.csv", show_col_types = FALSE)
imaging_studies     = read_csv("data/imaging_studies.csv", show_col_types = FALSE)
immunizations       = read_csv("data/immunizations.csv", show_col_types = FALSE)
medications         = read_csv("data/medications.csv", show_col_types = FALSE)
observations        = read_csv("data/observations.csv", show_col_types = FALSE)
organizations       = read_csv("data/organizations.csv", show_col_types = FALSE)
patients            = read_csv("data/patients.csv", show_col_types = FALSE)
payer_transitions   = read_csv("data/payer_transitions.csv", show_col_types = FALSE)
payers              = read_csv("data/payers.csv", show_col_types = FALSE)
procedures          = read_csv("data/procedures.csv", show_col_types = FALSE)
providers           = read_csv("data/providers.csv", show_col_types = FALSE)
supplies            = read_csv("data/supplies.csv", show_col_types = FALSE)
allergies           = read_csv("data/allergies.csv", show_col_types = FALSE)
careplans           = read_csv("data/careplans.csv", show_col_types = FALSE)
claims              = read_csv("data/claims.csv", show_col_types = FALSE)
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = FALSE)
conditions          = read_csv("data/conditions.csv", show_col_types = FALSE)
devices             = read_csv("data/devices.csv", show_col_types = FALSE)
encounters          = read_csv("data/encounters.csv", show_col_types = FALSE)
imaging_studies     = read_csv("data/imaging_studies.csv", show_col_types = FALSE)
immunizations       = read_csv("data/immunizations.csv", show_col_types = FALSE)
medications         = read_csv("data/medications.csv", show_col_types = FALSE)
observations        = read_csv("data/observations.csv", show_col_types = FALSE)
organizations       = read_csv("data/organizations.csv", show_col_types = FALSE)
patients            = read_csv("data/patients.csv", show_col_types = FALSE)
payer_transitions   = read_csv("data/payer_transitions.csv", show_col_types = FALSE)
payers              = read_csv("data/payers.csv", show_col_types = FALSE)
procedures          = read_csv("data/procedures.csv", show_col_types = FALSE)
providers           = read_csv("data/providers.csv", show_col_types = FALSE)
supplies            = read_csv("data/supplies.csv", show_col_types = FALSE)
claims              = read_csv("data/claims.csv", show_col_types = FALSE)
problems(allergies)
problems(claims)
claims
problems(claims)
problems(claims)$row
claims[problems(claims)$row, ]
claims[problems(claims)$row, problems(claims)$column]
claims[problems(claims)$row, problems(claims)$columns]
problems(claims)
claims[problems(claims)$row, problems(claims)$col]
claims[problems(claims)$row, ]
problems(claims)
claims[problems(claims)$row, ]
claims[problems(claims)$row - 1, ] #36955009
claims[problems(claims)$row + 1, ] #36955009
claims
claims |>
filter(DIAGNOSIS1 == 36955009 | DIAGNOSIS2 == 36955009 | DIAGNOSIS3 == 36955009)
problems(claims)
claims
claims |>
filter(row_number() == 11514)
claims |>
filter(row_number() == 11514) |>
select(15)
claims              = read_csv("data/claims.csv", show_col_types = FALSE)
readr::read_lines("data/claims.csv", n_max = 11514)[11514]
readr::read_lines("data/claims.csv")[11514]
readr::read_lines("data/claims.csv")
readr::read_lines("data/claims.csv") |>
as.data.frame()
allergies = read_csv("data/allergies.csv", show_col_types = F)
careplans = read_csv("data/careplans.csv", show_col_types = F)
claims = read_csv("data/claims.csv", show_col_types = F)
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = F)
conditions = read_csv("data/conditions.csv", show_col_types = F)
devices = read_csv("data/devices.csv", show_col_types = F)
encounters = read_csv("data/encounters.csv", show_col_types = F)
imaging_studies = read_csv("data/imaging_studies.csv", show_col_types = F)
immunizations = read_csv("data/immunizations.csv", show_col_types = F)
medications = read_csv("data/medications.csv", show_col_types = F)
observations = read_csv("data/observations.csv", show_col_types = F)
organizations = read_csv("data/organizations.csv", show_col_types = F)
patients = read_csv("data/patients.csv", show_col_types = F)
payer_transitions = read_csv("data/payer_transitions.csv", show_col_types = F)
payers = read_csv("data/payers.csv", show_col_types = F)
procedures = read_csv("data/procedures.csv", show_col_types = F)
providers = read_csv("data/providers.csv", show_col_types = F)
supplies = read_csv("data/supplies.csv", show_col_types = F)
tryCatch(expr = "read_csv("data/claims.csv", show_col_types = F)", finally = "helloooo")
allergies = read_csv("data/allergies.csv", show_col_types = F)
careplans = read_csv("data/careplans.csv", show_col_types = F)
claims = read_csv("data/claims.csv", show_col_types = F)
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = F)
conditions = read_csv("data/conditions.csv", show_col_types = F)
devices = read_csv("data/devices.csv", show_col_types = F)
encounters = read_csv("data/encounters.csv", show_col_types = F)
imaging_studies = read_csv("data/imaging_studies.csv", show_col_types = F)
immunizations = read_csv("data/immunizations.csv", show_col_types = F)
medications = read_csv("data/medications.csv", show_col_types = F)
observations = read_csv("data/observations.csv", show_col_types = F)
organizations = read_csv("data/organizations.csv", show_col_types = F)
patients = read_csv("data/patients.csv", show_col_types = F)
payer_transitions = read_csv("data/payer_transitions.csv", show_col_types = F)
payers = read_csv("data/payers.csv", show_col_types = F)
procedures = read_csv("data/procedures.csv", show_col_types = F)
providers = read_csv("data/providers.csv", show_col_types = F)
supplies = read_csv("data/supplies.csv", show_col_types = F)
colnames(allergies)
paste0(colnames(allergies), collapse = ", ")
paste0("table = allergies; ", colnames(allergies), collapse = ", ")
colnames(allergies)
colnames(allergies) |> paste0(collapse = ", ")
glue("table = allergies; {colnames(allergies) |> paste0(collapse = ", "}")
paste0(colnames(allergies), collapse = ", ")
allergies
library(tidyverse)
library(tvthemes)
library(janitor)
library(glue)
library(zoo)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
allergies = read_csv("data/allergies.csv", show_col_types = F) |> clean_names()
careplans = read_csv("data/careplans.csv", show_col_types = F) |> clean_names()
claims = read_csv("data/claims.csv", show_col_types = F) |> clean_names()
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = F) |> clean_names()
conditions = read_csv("data/conditions.csv", show_col_types = F) |> clean_names()
devices = read_csv("data/devices.csv", show_col_types = F) |> clean_names()
encounters = read_csv("data/encounters.csv", show_col_types = F) |> clean_names()
imaging_studies = read_csv("data/imaging_studies.csv", show_col_types = F) |> clean_names()
immunizations = read_csv("data/immunizations.csv", show_col_types = F) |> clean_names()
medications = read_csv("data/medications.csv", show_col_types = F) |> clean_names()
observations = read_csv("data/observations.csv", show_col_types = F) |> clean_names()
organizations = read_csv("data/organizations.csv", show_col_types = F) |> clean_names()
patients = read_csv("data/patients.csv", show_col_types = F) |> clean_names()
payer_transitions = read_csv("data/payer_transitions.csv", show_col_types = F) |> clean_names()
payers = read_csv("data/payers.csv", show_col_types = F) |> clean_names()
procedures = read_csv("data/procedures.csv", show_col_types = F) |> clean_names()
providers = read_csv("data/providers.csv", show_col_types = F) |> clean_names()
supplies = read_csv("data/supplies.csv", show_col_types = F) |> clean_names()
allergies
allergies = read_csv("data/allergies.csv", show_col_types = F)
allergies
library(tidyverse)
library(tvthemes)
library(janitor)
library(glue)
library(zoo)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
allergies = read_csv("data/allergies.csv", show_col_types = F) |> clean_names()
careplans = read_csv("data/careplans.csv", show_col_types = F) |> clean_names()
claims = read_csv("data/claims.csv", show_col_types = F) |> clean_names()
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = F) |> clean_names()
conditions = read_csv("data/conditions.csv", show_col_types = F) |> clean_names()
devices = read_csv("data/devices.csv", show_col_types = F) |> clean_names()
encounters = read_csv("data/encounters.csv", show_col_types = F) |> clean_names()
imaging_studies = read_csv("data/imaging_studies.csv", show_col_types = F) |> clean_names()
immunizations = read_csv("data/immunizations.csv", show_col_types = F) |> clean_names()
medications = read_csv("data/medications.csv", show_col_types = F) |> clean_names()
observations = read_csv("data/observations.csv", show_col_types = F) |> clean_names()
organizations = read_csv("data/organizations.csv", show_col_types = F) |> clean_names()
patients = read_csv("data/patients.csv", show_col_types = F) |> clean_names()
payer_transitions = read_csv("data/payer_transitions.csv", show_col_types = F) |> clean_names()
payers = read_csv("data/payers.csv", show_col_types = F) |> clean_names()
procedures = read_csv("data/procedures.csv", show_col_types = F) |> clean_names()
providers = read_csv("data/providers.csv", show_col_types = F) |> clean_names()
supplies = read_csv("data/supplies.csv", show_col_types = F) |> clean_names()
allergies
end_games
get_team_runs_scored = function(tm) {
home = end_games |> filter(home_team == tm) |> pull(home_score)
away = end_games |> filter(away_team == tm) |> pull(away_score)
runs = c(home, away)
return(round(mean(runs), 3))
}
end_games
get_team_runs_scored = function(tm) {
home = end_games |> filter(home_team == tm) |> pull(home_score)
away = end_games |> filter(away_team == tm) |> pull(away_score)
runs = c(home, away)
return(round(mean(runs), 3))
}
get_team_runs_allowed = function(tm) {
home = end_games |> filter(home_team == tm) |> pull(away_score)
away = end_games |> filter(away_team == tm) |> pull(home_score)
runs = c(home, away)
return(round(mean(runs), 3))
}
end_games |>
mutate(home_team_runs_scored = sapply(home_team, get_team_runs_scored),
home_team_runs_allowed = sapply(home_team, get_team_runs_allowed))
get_team_runs_scored = function(tm) {
home = end_games |> filter(home_team == tm) |> pull(home_score)
away = end_games |> filter(away_team == tm) |> pull(away_score)
runs = c(home, away)
return(round(mean(runs), 2))
}
get_team_runs_allowed = function(tm) {
home = end_games |> filter(home_team == tm) |> pull(away_score)
away = end_games |> filter(away_team == tm) |> pull(home_score)
runs = c(home, away)
return(round(mean(runs), 2))
}
end_games |>
mutate(home_team_runs_scored = sapply(home_team, get_team_runs_scored),
home_team_runs_allowed = sapply(home_team, get_team_runs_allowed))
end_games |>
head(25) |>
mutate(home_team_runs_scored = sapply(home_team, get_team_runs_scored),
home_team_runs_allowed = sapply(home_team, get_team_runs_allowed))
end_games |>
mutate(home_team_runs_scored = sapply(home_team, get_team_runs_scored),
home_team_runs_allowed = sapply(home_team, get_team_runs_allowed))
allergies
claims
claims_transactions
allergies
library(tidyverse)
library(tvthemes)
library(janitor)
library(glue)
library(zoo)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
allergies = read_csv("data/allergies.csv", show_col_types = F) |> clean_names()
careplans = read_csv("data/careplans.csv", show_col_types = F) |> clean_names()
claims = read_csv("data/claims.csv", show_col_types = F) |> clean_names()
claims_transactions = read_csv("data/claims_transactions.csv", show_col_types = F) |> clean_names()
conditions = read_csv("data/conditions.csv", show_col_types = F) |> clean_names()
devices = read_csv("data/devices.csv", show_col_types = F) |> clean_names()
encounters = read_csv("data/encounters.csv", show_col_types = F) |> clean_names()
imaging_studies = read_csv("data/imaging_studies.csv", show_col_types = F) |> clean_names()
immunizations = read_csv("data/immunizations.csv", show_col_types = F) |> clean_names()
medications = read_csv("data/medications.csv", show_col_types = F) |> clean_names()
observations = read_csv("data/observations.csv", show_col_types = F) |> clean_names()
organizations = read_csv("data/organizations.csv", show_col_types = F) |> clean_names()
patients = read_csv("data/patients.csv", show_col_types = F) |> clean_names()
payer_transitions = read_csv("data/payer_transitions.csv", show_col_types = F) |> clean_names()
payers = read_csv("data/payers.csv", show_col_types = F) |> clean_names()
procedures = read_csv("data/procedures.csv", show_col_types = F) |> clean_names()
providers = read_csv("data/providers.csv", show_col_types = F) |> clean_names()
supplies = read_csv("data/supplies.csv", show_col_types = F) |> clean_names()
setwd("~/r_projects/mlb25")
